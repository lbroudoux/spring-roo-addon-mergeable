// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.github.lbroudoux.roo.addon.mergeable.domain;

import com.github.lbroudoux.roo.addon.mergeable.domain.Tweet;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;

privileged aspect Tweet_Roo_Mergeable {
    
    @OneToOne
    private Tweet Tweet.mergeMainReference;
    
    @OneToOne
    private Tweet Tweet.mergeSecondReference;
    
    @ManyToOne
    private Tweet Tweet.mergeResult;
    
    public Tweet Tweet.getMergeMainReference() {
        return this.mergeMainReference;
    }
    
    public Tweet Tweet.getMergeSecondReference() {
        return this.mergeSecondReference;
    }
    
    public Tweet Tweet.getMergeResult() {
        return this.mergeResult;
    }
    
    public boolean Tweet.wasMerged() {
        return (this.mergeResult != null);
    }
    
    public boolean Tweet.isMergeResult() {
        return (this.mergeMainReference != null);
    }
    
    public Tweet Tweet.merge(Tweet second) {
        Tweet merge = new Tweet();
        merge.mergeMainReference = this;
        merge.mergeSecondReference = second;
        if (this.author != null){
           merge.author = this.author;
        } else if (second.author != null){
           merge.author = second.author;
        }
        if (this.content != null){
           merge.content = this.content;
        } else if (second.content != null){
           merge.content = second.content;
        }
        if (this.original != null){
           merge.original = this.original;
        } else if (second.original != null){
           merge.original = second.original;
        }
        merge.persist();
        this.mergeResult = merge;
        this.merge();
        second.mergeResult = merge;
        second.merge();
        return merge;
    }
    
}
